theme_bw()
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.3) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw()
y <- ifelse(y$y, "normal", "attack")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.3) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw()
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.4) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw()
Z <- read_csv("codings_tsne.csv", col_names = c("Z1", "Z2"))
y <- read_csv("y_codings.csv", col_names = "y")
y <- ifelse(y$y, "normal", "attack")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.4) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw()
# coarse classification
Z <- read_csv("codings_tsne.csv", col_names = c("Z1", "Z2"))
y <- read_csv("y_c.csv", col_names = "y")
y
y <- read_csv("y_c.csv", col_names = "y")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.4) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw()
y
y[500]
y$y
y <- read_csv("y_c.csv", col_names = "y")
y
y <- read_csv("y_c.csv", col_names = "y")
y
y <- read_csv("y_c.csv", col_names = "y")
y
y <- read_csv("y_c.csv")
y
y <- read_csv("y_c.csv")
y
y <- y$ctarget
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.4) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw()
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw()
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Set1")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Dark2")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Dark1")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Dark3")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Set1")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Set2")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Set3")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Accent")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Set1")
ggplot(Z, aes(Z1, Z2, color=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Set1")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.5) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Set1")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.7) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Set1")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.7) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "dark2")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.7) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Dark2")
ggplot(Z, aes(Z1, Z2, color=y, shape=y)) +
geom_point(alpha=0.4) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Dark2")
y <- read_csv("y_codings.csv", col_names = "y")
yb <- ifelse(y$y, "normal", "attack")
ggplot(Z, aes(Z1, Z2, color=yb, shape=yb)) +
geom_point(alpha=0.4) +
labs(x="First t-SNE component",
y="Second t-SNE component",
color="Class",
shape="Class") +
theme_bw() +
scale_color_brewer(palette = "Dark2")
library(tidyverse)
res <- read_csv("results.csv")
res
res %>%
pivot_longer(Accuracy:AUC, names_to = metric, values_to = performance)
res %>%
pivot_longer(Accuracy:AUC, names_to = "metric", values_to = "performance")
res %>%
pivot_longer(Accuracy:AUC, names_to = "metric", values_to = "performance") %>%
filter(Task == "Binary")
res %>%
pivot_longer(Accuracy:AUC, names_to = "Metric", values_to = "Performance") %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill = c(DimensionReduction, Performance))) +
geom_col()
res %>%
pivot_longer(Accuracy:AUC, names_to = "Metric", values_to = "Performance") %>%
unite(Model, DimensionReduction, col = "Model", sep = "-")
res %>%
pivot_longer(Accuracy:AUC, names_to = "Metric", values_to = "Performance") %>%
unite(Model, DimensionReduction, col = "Model", sep = "-")
res <- res %>%
pivot_longer(Accuracy:AUC, names_to = "Metric", values_to = "Performance") %>%
unite(Model, DimensionReduction, col = "Model", sep = "-")
res %>%
filter(Task == "Binary")
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_col()
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_col(position = "dodge")
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point()
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point(position = "dodge")
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point(position = "jitter")
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point() +
geom_segment(aes(x=Model, xend=Model, y=0, yend=Perfomance))
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point() +
geom_segment(aes(x=Model, xend=Model, y=0, yend=Performance))
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point() +
geom_segment(aes(x=Model, xend=Model, y=0, yend=Performance)) +
coord_flip()
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point() +
geom_segment(aes(x=Model, xend=Model, y=0, yend=Performance)) +
coord_flip() +
facet_wrap(~Metric)
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point() +
geom_segment(aes(x=Model, xend=Model, y=0, yend=Performance)) +
coord_flip() +
facet_wrap(~Metric) +
scale_y_log10()
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point() +
geom_segment(aes(x=Model, xend=Model, y=0, yend=Performance)) +
coord_flip() +
facet_wrap(~Metric) +
scale_y_sqrt()
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point() +
geom_segment(aes(x=Model, xend=Model, y=0, yend=Performance)) +
coord_flip() +
facet_wrap(~Metric) +
coord_cartesian(ylim = c(0.99,1))
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_point() +
geom_segment(aes(x=Model, xend=Model, y=0, yend=Performance)) +
facet_wrap(~Metric) +
coord_cartesian(ylim = c(0.99,1)) +
coord_flip()
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
facet_wrap(~Metric)
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric)
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_log10()
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_sqrt()
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = power(2))
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = log)
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = log())
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = scales::boxcox_trans())
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = scales::boxcox_trans(-1))
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = scales::boxcox_trans(2))
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = scales::boxcox_trans(5))
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = scales::boxcox_trans(0.2))
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = scales::boxcox_trans(1.2))
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = scales::boxcox_trans(-1.2))
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric) +
scale_y_continuous(trans = scales::boxcox_trans(-10))
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
geom_smooth() +
facet_wrap(~Metric)
res %>%
ggplot(aes(TimePerSearch, Performance)) +
geom_point() +
facet_wrap(~Metric)
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_col(position = "dodge") +
coord_cartesian(ylim = c(0.99,1)) +
coord_flip()
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_col(position = "dodge") +
coord_flip() +
coord_cartesian(ylim = c(0.99,1))
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_col(position = "dodge") +
coord_flip() +
coord_cartesian(ylim = c(0.98,1))
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_col(position = "dodge") +
coord_flip() +
coord_cartesian(ylim = c(0.97,1))
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_col(position = "dodge") +
coord_flip() +
coord_cartesian(ylim = c(0.97,1)) +
coord_flip()
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_col(position = "dodge") +
coord_flip(ylim = c(0.97,1))
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_col(position = "dodge") +
coord_flip(ylim = c(0.97,1)) +
scale_fill_discrete()
res %>%
filter(Task == "Binary") %>%
ggplot(aes(Model, Performance, fill=Metric)) +
geom_col(position = "dodge") +
coord_flip(ylim = c(0.97,1)) +
scale_fill_brewer(palette = "Set1")
res
res %>%
filter(Task=="Binary", Metric=="AUC")
res %>%
filter(Task=="Binary", Metric=="AUC") %>%
with( lm(Performance ~ Features)) %>%
summary()
res %>%
filter(Task=="Binary", Metric=="AUC") %>%
with( lm(Performance ~ Time)) %>%
summary()
res %>%
filter(Task=="Binary", Metric=="AUC") %>%
with( lm(Performance ~ TimePerSearch)) %>%
summary()
.43**0.5
res
res <- read_csv("results.csv")
res
res %>%
filter(Task=="Binary") %>%
with( lm(AUC ~ DimensionReduction)) %>%
summary()
res %>%
filter(Task=="Binary") %>%
with( lm(AUC ~ DimensionReduction + TimePerSearch)) %>%
summary()
res %>%
filter(Task=="Binary") %>%
with( lm(AUC ~ DimensionReduction + Model)) %>%
summary()
res %>%
filter(Task=="Binary") %>%
with( lm(AUC ~ DimensionReduction * Model)) %>%
summary()
res %>%
filter(Task=="Binary") %>%
with( lm(AUC ~ DimensionReduction + Model)) %>%
summary()
install.packages("betareg")
library("betareg")
fit <- betareg(AUC ~ DimensionReduction, data = res %>% filter(Task=="Binary"))
summary(fit)
fit <- betareg(AUC ~ Model, data = res %>% filter(Task=="Binary"))
summary(fit)
fit <- betareg(AUC ~ Model, data = res %>% filter(Task=="Binary"))
res
res$AUC
res %>%
filter(Task=="Binary") %>%
with( lm(AUC ~ DimensionReduction + Model)) %>%
summary()
res %>%
filter(Task=="Binary") %>%
with( lm(AUC ~ Model)) %>%
summary()
res %>%
filter(Task=="Binary") %>%
with( lm(AUC ~ Model + DimensionReduction)) %>%
summary()
res %>%
filter(Task=="Binary") %>%
with( lm(AUC ~ Model)) %>%
summary()
